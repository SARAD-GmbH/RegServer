@startuml
!include <c4/C4_Component.puml>
!include <office/Users/user.puml>

hide stereotype

'AddTagSupport("mod", $borderColor="#d73027")

!$rs = "Registration Server MQTT"
!$instr = "SARAD-Instrument"
!$instr_m = "SARAD-Instrumente"

Container(rs, $rs, "wählt ein $instr zur Kommunikation aus.")

Container_Boundary(mod, "Lokal-Modul") {
        Component(listener, "Unix Listener", "Python Class", "Erkennt neue USB-Geräte.")
        Component(cluster_actor, "Cluster Actor", "Singleton Actor", "erkennt $instr_m, stellt Kommunikationsfunktionen bereit")
        Component(device_actor1, "Device Actor A", "Actor")
}
Container_Boundary(is, "MQTT-Modul") {
        Component(scheduler, "MQTT Scheduler", "Singleton Actor", "MQTT-Client")
}
ComponentDb(registrar, "Registrar", "Actor")

Container(inst, $instr, "(virtueller) COM-Port mit SARAD-Protokoll")

Rel(inst, listener, "1. erkennt Gerät", "USB")
Rel(listener, cluster_actor, "2. ADD/REMOVE", "message")
Rel(inst, cluster_actor, "3. erkennt $instr", "USB/RS-232 Polling")
Rel(cluster_actor, device_actor1, "4. erzeugt", "createActor")
Rel(cluster_actor, device_actor1, "5. SetupMsg", "message")
Rel(device_actor1, registrar, "6. SubscribeMsg",  "message")
Rel(device_actor1, scheduler, "7. UpdateDeviceStatusMsg", "Message")
Rel(scheduler, rs, "8. meldet Gerät A", "MQTT")
Rel(rs, scheduler, "9. Reservierung", "MQTT")
Rel(scheduler, device_actor1, "10. ReserveDeviceMsg", "Message")
Rel(device_actor1, scheduler, "11. ReservationStatusMsg", "Message")
BiRel(rs, scheduler, "12. Binärpaket", "MQTT")
BiRel(scheduler, device_actor1, "12. Binärpaket", "Messages")
BiRel(device_actor1, cluster_actor, "12. SEND", "Messages")
BiRel(inst, cluster_actor, "12. Binärpaket", "COM-Port")
@enduml
