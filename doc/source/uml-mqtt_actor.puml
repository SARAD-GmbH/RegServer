@startuml
actor "Service Employee" as user
entity "Device with Instrument Server" as is_mqtt
entity "MQTT Broker" as broker
box "RegistrationServer MQTT"
entity "SaradMqttSubscriber" as subscriber
entity "MQTT Actor" as mqtt_actor
entity "REST API" as rest_api
entity "Redirector actor" as redirector
database "Device List" as d_list
end box

group Setup & Prepare
    subscriber -> mqtt_actor : create a device actor to receive commands / data\nif the instrument server is_id is already added
    subscriber -> mqtt_actor : ask the mqtt actor to setup itself
    mqtt_actor -> d_list : create a description file\nfor the instrument_id.SARAD_Type.mqtt
    subscriber -> mqtt_actor : ask the mqtt actor to prepare itself\nfor the future works
    mqtt_actor -> broker : prepare itself and connect to the broker
    mqtt_actor -> broker : unsubscribe to the topics\n"<is_id>/<instrument_id>/meta"\nand "<is_id>/<instrument_id>/reservation"
end

group Reserve
    is_mqtt -> broker : subscribe to topic "+/+/control"
    rest_api -> mqtt_actor : ask the mqtt actor to send a reservation request
    mqtt_actor -> broker : subscribe to the topic\n"<is_id>/<instrument_id>/reservation"
    mqtt_actor -> broker : publish\n"<is_id>/<instrument_id>/control= {"Req": "reserve", ...}"
    broker -> is_mqtt : rely the reservation request
    is_mqtt -> broker : publish\n"<is_id>/<instrument_id>/reservation= {"Active": True, ...}"
    is_mqtt -> broker : subscribe to the topic\n"<is_id>/<instrument_id>/cmd"
    broker -> mqtt_actor : rely the answer to the request
    mqtt_actor -> redirector : create a redirector\nand ask it to setup itself
end

group Tx/Rx Binary data
    redirector -> mqtt_actor : ask the mqtt actor to send a binary command
    mqtt_actor -> broker : subscribe to topic\n"<is_id>/<instrument_id>/msg"
    mqtt_actor -> broker : publish\n"<is_id>/<instrument_id>/cmd = cmd_id + binary command"
    broker -> is_mqtt : rely the cmd
    is_mqtt -> broker : publish\n"<is_id>/<instrument_id>/msg = cmd_id + binary reply"
    broker -> mqtt_actor : rely the reply
    mqtt_actor -> redirector : check the cmd_id and if right\nthen send the binary reply to the redirector
end

group Free
    rest_api -> mqtt_actor : ask the mqtt actor to send free request
    mqtt_actor -> broker : publish\n"<is_id>/<instrument_id>/control = {"Req": "free"}"
    mqtt_actor -> broker : unsubscribe to the topics\n"<is_id>/<instrument_id>/reservation"\nand "<is_id>/<instrument_id>/msg"
    mqtt_actor -> redirector : destroy
    mqtt_actor -> rest_api : send "OK_SKIPPED" to the REST API
    broker -> is_mqtt : rely the request
    is_mqtt -> broker : unsubscribe to the topic\n"<is_id>/<instrument_id>/cmd"
end

@enduml
