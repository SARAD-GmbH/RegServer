@startuml
!include <c4/C4_Component.puml>
!include <office/Users/user.puml>

hide stereotype

' AddTagSupport("mod", $borderColor="#d73027")

!$app = "SARAD-App"
!$rs = "Registration Server 2 (ZeroConf)"
!$is = "Instrument Server"
!$inst = "SARAD-Instrument"
!$inst_m = "SARAD-Instrumente"

Container(app, $app, "wählt ein $instr zur Kommunikation aus.")

Container_Boundary(mod, "RFC2217-Modul", $rs, $tags="mod") {
        Component(listener, "mDNS Listener", "Python Class", "Erkennt neue $inst_m.")
        Component(device_actor1, "Device Actor A", "Actor", "RFC2217")
}
Container_Boundary(rs, "Basis", $rs) {
        Component(api, "REST API", "JSON/HTTP", "Geräteliste mit Status")
        Component(redirector1, "Redirector Actor A", "Actor", "TCP Socket")
}
ComponentDb(device_files, "Gerätedateien", "Dateisystem")

Container(is1, $is, "verwaltet Gerätebelegung, stellt eine Internetschnittstelle zum $inst bereit")

Rel(is1, listener, "1. meldet Gerät A", "mDNS Multicast")
Rel(listener, device_actor1, "2. erzeugt", "createActor")
Rel(listener, device_actor1, "3. SETUP", "message")
Rel(device_actor1, device_files, "4. Datei",  "JSON Identification")
Rel(api, app, "5. GET list", "JSON/HTTP")
Rel(api, device_files, "6. liest", "JSON/HTTP")
Rel(app, api, "7. GET reserve", "JSON/HTTP")
Rel(api, device_actor1, "8. RESERVE", "Message")
Rel(device_actor1, is1, "9. Reservierung", "JSON/HTTP")
Rel(device_actor1, redirector1, "10. erzeugt", "createActor")
Rel(device_actor1, device_files, "11. schreibt in Datei", "JSON Reservation")
BiRel(app, redirector1, "12. Binärpaket", "TCP-Socket")
BiRel(redirector1, device_actor1, "12. Binärpaket", "Messages")
BiRel(is1, device_actor1, "12. Binärpaket", "RFC2217")
@enduml
