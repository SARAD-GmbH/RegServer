[project]
name = "regserver"
version = "2.3.8"
description = "SARAD Registration Server Service"
authors = [
    {name = "Michael Strey", email = "strey@sarad.de"},
]
dependencies = [
    "pyudev",
    "thespian==3.10.5",
    "flask",
    "pyserial",
    "hashids",
    "pyserial-asyncio",
    "paho-mqtt",
    "pyyaml",
    "appdirs",
    "overrides",
    "requests",
    "waitress",
    "modbus-tk",
    "flask-restx",
    "rpi-gpio; sys_platform == \"linux\"",
    "pywin32; sys_platform == \"win32\"",
    "gpiozero; sys_platform == \"linux\"",
    "systemd-python; sys_platform == \"linux\"",
    "tomlkit",
    "zeroconf==0.118.0",
    "sarad @ git+https://github.com/SARAD-GmbH/sarad.git@master",
    "platformdirs>=4.2.0",
]
requires-python = "<3.11, >=3.9"
readme = "README.md"
license = {text = "LGPL-3.0-or-later"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Programming Language :: Python :: 3",
    "Topic :: Communications",
]

[project.scripts]
sarad_registration_server = "regserver.main:main"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[tool.pdm.dev-dependencies]
dev = [
    "twine",
    "wheel",
    "pytest",
    "pyinstaller",
    "sphinx; sys_platform == \"linux\"",
    "sphinx-autodoc-typehints; sys_platform == \"linux\"",
    "sphinxcontrib-plantuml; sys_platform == \"linux\"",
    "sphinx-autoapi; sys_platform == \"linux\"",
    "sphinx_rtd_theme; sys_platform == \"linux\"",
    # "-e git+https://github.com/SARAD-GmbH/sarad.git@master#egg=sarad",
]
lint = [
    "ruff>=0.3.4",
]

[tool.pylint.MAIN]
init-hook = """
try: import pylint_venv
except ImportError: pass
else: pylint_venv.inithook()
"""

[tool.ruff]
lint.select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "E", # pycodestyle - Error
    "F", # Pyflakes
    "I", # isort
    "W", # pycodestyle - Warning
    "UP", # pyupgrade
]

lint.ignore = [
]

include = ["**/*.py", "**/*.pyi", "**/pyproject.toml"]

[tool.ruff.lint.pydocstyle]
convention = "google"
